@page "/scan"

@implements IDisposable

@inject ScanViewModel _scanViewModel;

<video id="preview" hidden="@(!_scanViewModel.IsStreaming)"></video>

@if (!_scanViewModel.IsStreaming)
{
    <div class="container">
        <svg xmlns="http://www.w3.org/2000/svg"
             width="24" height="24" viewBox="0 0 24 24"
             fill="none" stroke="currentColor"
             stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"
             class="feather feather-camera-off">
            <line xmlns="http://www.w3.org/2000/svg" x1="1" y1="1" x2="23" y2="23" />
            <path xmlns="http://www.w3.org/2000/svg" d="M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56" />
        </svg>
        <strong>@_scanViewModel.ErrorMessage</strong>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        _scanViewModel.SetCameraNotOpen();
        _scanViewModel.OnPropertyChanged += (s, e) => StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _scanViewModel.StartQrScanner();
        }
    }

    public void Dispose()
    {
        _scanViewModel.OnPropertyChanged -= (s, e) => StateHasChanged();
        _scanViewModel.Dispose();
    }
}
